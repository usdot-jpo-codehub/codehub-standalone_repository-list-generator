[{"category": "Commercial Vehicle Operations", "repos": [{"name": "FTOT-Public", "url": "https://github.com/VolpeUSDOT/FTOT-Public", "description": "Public Version of the Freight and Fuel Transportation Optimization Tool", "org": "VolpeUSDOT", "category": "Commercial Vehicle Operations"}, {"name": "LA-FRATIS", "url": "https://github.com/OSADP/LA-FRATIS ", "description": "LA-FRATIS - Enhancement of Cross Town Improvement Project (C-TIP) Drayage Optimization Proof of Concept Application", "org": "OSADP ", "category": "Commercial Vehicle Operations"}, {"name": "SRI", "url": "https://github.com/OSADP/SRI ", "description": "SRI is a suite of applications used by law enforcement to monitor commercial motor vehicle (CMV) activity coming through the weigh stations. ", "org": "OSADP ", "category": "Commercial Vehicle Operations"}]}, {"category": "Data Management", "repos": [{"name": "aws-metrics-and-reporting", "url": "https://github.com/usdot-its-jpo-code/aws-metrics-and-reporting", "description": "Scripts to be called to generate AWS cloudwatch metrics and uptime reports", "org": "usdot-its-jpo-code", "category": "Data Management"}, {"name": "boto3-sqs-extended-client-lib", "url": "https://github.com/usdot-its-jpo-data-portal/boto3-sqs-extended-client-lib", "description": "Boto3 SQS Extended Client Library for Python", "org": "usdot-its-jpo-data-portal", "category": "Data Management"}, {"name": "canary-lambda", "url": "https://github.com/usdot-its-jpo-data-portal/canary-lambda", "description": "This canary function is an early warning system that reports corrupt data. It listens to an SQS queue for notifications about new files in Amazon Web Services (AWS) Simple Storage Service (S3), and then validate that it meets certain field constraints.", "org": "usdot-its-jpo-data-portal", "category": "Data Management"}, {"name": "codehub-admin-api", "url": "https://github.com/usdot-jpo-codehub/codehub-admin-api", "description": "The Admin API of CodeHub has the function to administer the metadata information (documents) for the CodeHub Ingestion system. The API connect to an ElasticSearch storage system. ", "org": "usdot-jpo-codehub", "category": "Data Management"}, {"name": "codehub-cloudformation", "url": "https://github.com/usdot-jpo-codehub/codehub-cloudformation", "description": "CloudFormation templates used for various CodeHub services.", "org": "usdot-jpo-codehub", "category": "Data Management"}, {"name": "codehub-ingest", "url": "https://github.com/usdot-jpo-codehub/codehub-ingest", "description": "Ingestion process for Codehub", "org": "usdot-jpo-codehub", "category": "Data Management"}, {"name": "codehub-readme-template", "url": "https://github.com/usdot-jpo-codehub/codehub-readme-template", "description": "The following template is comprised of best practices for creating and organizing your repository's README.", "org": "usdot-jpo-codehub", "category": "Data Management"}, {"name": "codehub-search", "url": "https://github.com/usdot-jpo-codehub/codehub-search", "description": "This repository is broken down into two folders: schemas and scripts. The schemas directory contains the ElasticSearch schemas that ITS CodeHub uses to organize and manage data. The scripts directory provides guidance for how to interact with ElasticSearch, particularly running ES in Docker, creating indexes, listing them, and using elasticsearch-dump for data management.", "org": "usdot-jpo-codehub", "category": "Data Management"}, {"name": "codehub-standalone", "url": "https://github.com/usdot-jpo-codehub/codehub-standalone", "description": "The source code for the ITS CodeHub website, which  provides a public, centralized catalog for ITS JPO source code to promote source code discovery and reuse.", "org": "usdot-jpo-codehub", "category": "Data Management"}, {"name": "codehub-standalone_repository-list-generator", "url": "https://github.com/usdot-jpo-codehub/codehub-standalone_repository-list-generator", "description": "Supporting repository for the codehub-standalone repository. It acts as a data transformation tool to manage the list of registered code repositories on ITS CodeHub.", "org": "usdot-jpo-codehub", "category": "Data Management"}, {"name": "codehub-ui", "url": "https://github.com/usdot-jpo-codehub/codehub-ui", "description": "This repository holds the frontend user-interface (UI) code for the United States Department of Transportation (U.S. DOT) Joint Program Office (JPO) Intelligent Transit Systems (ITS) CodeHub website located at https://its.dot.gov/code.", "org": "usdot-jpo-codehub", "category": "Data Management"}, {"name": "codehub-ui-image-server", "url": "https://github.com/usdot-jpo-codehub/codehub-ui-image-server", "description": "CodeHub UI Image Server is a web server to serve as central location/service for images mainly used by codehub-ui.", "org": "usdot-jpo-codehub", "category": "Data Management"}, {"name": "codehub-webapi", "url": "https://github.com/usdot-jpo-codehub/codehub-webapi", "description": "CodeHub Web API to consume data from CodeHub ElasticSearch storage system.", "org": "usdot-jpo-codehub", "category": "Data Management"}, {"name": "cv_pilot_ingest", "url": "https://github.com/usdot-its-jpo-data-portal/cv_pilot_ingest", "description": "Code for ingesting CV pilot data into ITS DataHub S3 Sandbox.", "org": "usdot-its-jpo-data-portal", "category": "Data Management"}, {"name": "CVD-DME", "url": "https://github.com/OSADP/CVD-DME", "description": "Connected Vehicle Data-Driven Measures Estimation: This software package contains code to estimate key transportation measures using connected vehicle messages as well as to establish ground truth data using vehicle trajectories.", "org": "OSADP", "category": "Data Management"}, {"name": "data-access-coe-resources", "url": "https://github.com/usdot-its-jpo-data-portal/data-access-coe-resources", "description": "Resources for U.S. DOT Data Access Center of Excellence (CoE).", "org": "usdot-its-jpo-data-portal", "category": "Data Management"}, {"name": "Data-Visualization-Tool", "url": "https://github.com/OSADP/Data-Visualization-Tool", "description": "This repository contains code and other assets to render a website displaying prototype visualizations of selected data sets in the Federal Highway Administration (FHWA)'s Research Data Environment (RDE)", "org": "OSADP", "category": "Data Management"}, {"name": "datahub-pages", "url": "https://github.com/usdot-its-jpo-data-portal/datahub-pages", "description": "This repository contains common technical and development related documentaion for the overall usdot-its-jpo-data-portal organization.", "org": "usdot-its-jpo-data-portal", "category": "Data Management"}, {"name": "datahub-search", "url": "https://github.com/usdot-its-jpo-data-portal/datahub-search", "description": "Contains Elasticsearch Index definition for ITS DataHub data.", "org": "usdot-its-jpo-data-portal", "category": "Data Management"}, {"name": "datahub-ui", "url": "https://github.com/usdot-its-jpo-data-portal/datahub-ui", "description": "Public repository tracking progress in development of new USDOT Intelligent Transportation Systems Joint Program Office (ITS JPO) data sharing portal.", "org": "usdot-its-jpo-data-portal", "category": "Data Management"}, {"name": "Datastillery \u2013 Charts", "url": "https://github.com/Datastillery/charts", "description": "This repository consists of all of the Helm (https://helm.sh/) charts that are used to deploy the applications for the Datastillery Smartcitiesdata platform.", "org": "Datastillery", "category": "Data Management"}, {"name": "Datastillery \u2013 Discovery UI (User Interface)", "url": "https://github.com/Datastillery/react_discovery_ui", "description": "A react web application that can be used in conjunction with the Datastillery Smartcitiesdata platform.  This provides a front end user interface that allows people to search and discover datasets hosted on the platform as well as query, report, and visualize data stored in the platform.", "org": "Datastillery", "category": "Data Management"}, {"name": "Datastillery \u2013 KDP (Kubernetes Data Platform)", "url": "https://github.com/Datastillery/kdp", "description": "Creates the PrestoDB (https://prestodb.io/) storage instance that the Datastillery Smartcitiesdata platform uses to store all ingested data.", "org": "Datastillery", "category": "Data Management"}, {"name": "Datastillery \u2013 Smartcitiesdata", "url": "https://github.com/Datastillery/smartcitiesdata", "description": "Data platform that was developed for the City of Columbus as part of the implementation for the US Department of Transportation's 2015 Smart City Challenge.", "org": "Datastillery", "category": "Data Management"}, {"name": "dmp_analysis_script", "url": "https://github.com/usdot-its-jpo-data-portal/dmp_analysis_script", "description": "Extracts the survey information from the Data Management Plan (DMP) Sufficiency Checklist into a text format using TAB delimited as separator.", "org": "usdot-its-jpo-data-portal", "category": "Data Management"}, {"name": "fedgov-cv-webfragment-rest", "url": "https://github.com/usdot-its-jpo-code/fedgov-cv-webfragment-rest", "description": "Webfragment providing a RESTful interface to the SDC/SDW using Spring MVC", "org": "usdot-its-jpo-code", "category": "Data Management"}, {"name": "its-dmp-data-dictionary", "url": "https://github.com/usdot-its-jpo-data-portal/its-dmp-data-dictionary", "description": "This repository contains data dictionaries referenced in ITS DataHub's Data Management Plan (DMP).", "org": "usdot-its-jpo-data-portal", "category": "Data Management"}, {"name": "jpo-ode", "url": "https://github.com/usdot-jpo-ode/jpo-ode", "description": "US Department of Transportation (USDOT) Intelligent Transportation Systems Operational Data Environment (ITS ODE). This is the main repository that integrates and coordinates ODE Submodules.", "org": "usdot-jpo-ode", "category": "Data Management"}, {"name": "jpo-record-parser", "url": "https://github.com/usdot-jpo-ode/jpo-record-parser", "description": "Archived code for microservice used by the Operational Data Environment (ODE) to parse records.", "org": "usdot-jpo-ode", "category": "Data Management"}, {"name": "jpo-s3-deposit", "url": "https://github.com/usdot-jpo-ode/jpo-s3-deposit", "description": "SUBMODULE: Generic Kafka stream to S3 depositing modules. Packages JSON kafka streams into files for depositing into research data environments.", "org": "usdot-jpo-ode", "category": "Data Management"}, {"name": "jpo-sdcsdw", "url": "https://github.com/usdot-its-jpo-code/jpo-sdcsdw", "description": "Main project", "org": "usdot-its-jpo-code", "category": "Data Management"}, {"name": "jpo-sdw-depositor", "url": "https://github.com/usdot-jpo-ode/jpo-sdw-depositor", "description": "Subscribes to a Kafka topic and deposits messages to the US DOT Situation Data Warehouse (SDW).", "org": "usdot-jpo-ode", "category": "Data Management"}, {"name": "metadata-query-function", "url": "https://github.com/usdot-its-jpo-data-portal/metadata-query-function", "description": "S3 query runner used for ODE metadata bug information aggregation.", "org": "usdot-its-jpo-data-portal", "category": "Data Management"}, {"name": "metadata_ingest", "url": "https://github.com/usdot-its-jpo-data-portal/metadata_ingest", "description": "Utilities for parsing ITS DataHub Metadata Questionnaire and ingesting metadata of data sets to ITS DataHub.", "org": "usdot-its-jpo-data-portal ", "category": "Data Management"}, {"name": "Motion-Logger", "url": "https://github.com/OSADP/Motion-Logger ", "description": "MIT CloudThink Motion Logger:The CloudThink Motion and Context Logger captures information from phone sensors to a comma-separated text file for data analysis and motion studies. This application collects data from all of the phone's motion-related sensors, including the accelerometer, gyroscope, compass, and GPS. There are two releases, one for iOS and one for Android.", "org": "OSADP ", "category": "Data Management"}, {"name": "ode-output-validator-library", "url": "https://github.com/usdot-jpo-ode/ode-output-validator-library", "description": "Contains shared library functions for validating ODE message output schemas and constraints.", "org": "usdot-jpo-ode", "category": "Data Management"}, {"name": "P-ODE", "url": "https://github.com/OSADP/P-ODE", "description": "Prototype Operational Data Environment (P-ODE)", "org": "OSADP", "category": "Data Management"}, {"name": "performance-dashboard", "url": "https://github.com/usdot-its-jpo-data-portal/performance-dashboard", "description": "Public repository tracking progress in development of new USDOT ITS JPO data sharing portal metrics dashboard.", "org": "usdot-its-jpo-data-portal", "category": "Data Management"}, {"name": "RDE-Visualization-Website", "url": "https://github.com/FHWA/RDE-Visualization-Website", "description": "Prototype visualizations of selected data in the FHWA's Research Data Environment", "org": "FHWA", "category": "Data Management"}, {"name": "RDE-Visualization-Website_DataHubDiversion", "url": "https://github.com/usdot-its-jpo-data-portal/RDE-Visualization-Website_DataHubDiversion", "description": "Prototype visualizations of selected data originally developed for FHWA's Research Data Environment and updated for ITS JPO's ITS Public Data Hub.", "org": "usdot-its-jpo-data-portal", "category": "Data Management"}, {"name": "sandbox", "url": "https://github.com/usdot-its-jpo-data-portal/sandbox", "description": "Public repository tracking progress in development of new USDOT ITS JPO data sandbox.", "org": "usdot-its-jpo-data-portal", "category": "Data Management"}, {"name": "sdc-dot-metadata-ingest", "url": "https://github.com/usdot-jpo-sdc/sdc-dot-metadata-ingest", "description": "Lambda function to capture metadata across the pipeline and ingests into Elasticsearch. This also includes the lambda code for generating the CDO dashboards in Elasticsearch service", "org": "usdot-jpo-sdc", "category": "Data Management"}, {"name": "SEMI-ODE", "url": "https://github.com/OSADP/SEMI-ODE", "description": "The South East Michigan (SEMI) Operational Data Environment (ODE) is an early  release of software that was developed to acquire connected vehicle data,  conduct data valuation, aggregation and integration functions, and provide it  to clients that have connected to it.", "org": "OSADP", "category": "Data Management"}, {"name": "SSAM", "url": "https://github.com/OSADP/SSAM", "description": "SSAM3 is used to perform safety analysis of traffic facilities combining with microsimulation software. This technique may be of use to researchers, transportation engineers, and safety engineers. There are two versions of SSAM3, single threading version (SSAM3.exe) and multi-threading version (SSAM3M.exe).", "org": "OSADP", "category": "Data Management"}, {"name": "udp-interface", "url": "https://github.com/usdot-its-jpo-code/udp-interface", "description": "The SDC/SDW stores and distributes Traveler Information Messages (TIMs). The UDP Interface of the mvp SDC/SDW allows users to programmatically receive these TIMS bundled as Advisory Situation Data Distributions.", "org": "usdot-its-jpo-code", "category": "Data Management"}]}, {"category": "Maintenance and Construction", "repos": [{"name": "Construction-Work-Zone-Mitigation-Tool", "url": "https://github.com/OSADP/Construction-Work-Zone-Mitigation-Tool", "description": "The application runs on a combination of PostgreSQL with PostGIS (the spatial data management and analysis package for PostgreSQL), which is responsible for the main analytic processes, and RStudio, which provides the run-time interface and rendering engine.", "org": "OSADP", "category": "Maintenance and Construction"}, {"name": "Work_Zone_Data_Collection_Toolset", "url": "https://github.com/TonyEnglish/Work_Zone_Data_Collection_Toolset", "description": "This project is an open source, proof of concept work zone data collection tool. The purpose of this tool is to allow a construction manager in the field and transportation system manager at the Infrastructure Owner Operator (IOO) back-office  to map work zones and distribute generated map messages to third parties. This project is part of a larger effort on understanding mapping needs for V2X applications, funded by USDOT. This repository is a deliverable under the project and supports the Development and Demonstration of Proof-of-Concept of an Integrated Work Zone Mapping Toolset.", "org": "TonyEnglish", "category": "Maintenance and Construction"}, {"name": "wzdx", "url": "https://github.com/usdot-jpo-ode/jpo-wzdx", "description": "The Work Zone Data Exchange (WZDx) Specification aims to make harmonized work zone data provided by infrastructure owners and operators (IOOs) available for third party use, making travel on public roads safer and more efficient through ubiquitous access to data on work zone activity.", "org": "usdot-jpo-ode", "category": "Maintenance and Construction"}]}, {"category": "Parking Management", "repos": [{"name": "caco-parking-map", "url": "https://github.com/VolpeUSDOT/caco-parking-map", "description": "NPMap based application for parking management system developed by Volpe with the National Park Service Northeast Region and Cape Cod National Seashore.", "org": "VolpeUSDOT", "category": "Parking Management"}, {"name": "Datastillery \u2013 Parking Prediction", "url": "https://github.com/Datastillery/parking_prediction", "description": "This repository contains the code needed to train a model to make predictions about the availability of parking in the city of Columbus, Ohio. It includes notebooks describing the process taken to arrive at this model version, as well as a Dockerfile and helm charts needed to package and deploy it as an api to a Kubernetes cluster.", "org": "Datastillery", "category": "Parking Management"}, {"name": "Datastillery \u2013 Parking Prediction Orchestration", "url": "https://github.com/Datastillery/parking_prediction_orchestration", "description": "The project handles the ETL (Extract Transform Load) process needed to transform source data from Discovery into the data needed to train the parking prediction model.", "org": "Datastillery", "category": "Parking Management"}]}, {"category": "Public Transporation", "repos": [{"name": "gtfs-measures", "url": "https://github.com/VolpeUSDOT/gtfs-measures", "description": "Source code for OST-P/Volpe project exploring estimation of segment-level transit ridership and other measures from GTFS feeds.", "org": "VolpeUSDOT", "category": "Public Transporation"}]}, {"category": "Support", "repos": [{"name": "AMS-TCA-Aimsun", "url": "https://github.com/OSADP/AMS-TCA-Aimsun", "description": "The Trajectory Conversion Algorithm-Aimsun (TCA-A) Software is designed to test different strategies  for producing, transmitting, and storing Connected Vehicle information. The TCA-A runs with the Aimsun  tool using real-time simulation vehicle information, roadside equipment (RSE) location information,  cellular or event region information and strategy information to produce a series of snapshots that a  connected vehicle would produce.", "org": "OSADP", "category": "Support"}, {"name": "asn1_codec", "url": "https://github.com/usdot-jpo-ode/asn1_codec", "description": "Module to encode and decode ASN.1 streams of messages using Kafka messaging hub for communication with the data source and data destination in a pub/sub scheme.", "org": "usdot-jpo-ode ", "category": "Support"}, {"name": "asn1c", "url": "https://github.com/usdot-jpo-ode/asn1c", "description": "ASN.1 to C compiler takes the ASN.1 module files (example) and generates the C++ compatible C source code. That code can be used to serialize the native C structures into compact and unambiguous BER/XER/PER-based data files, and deserialize the files back.", "org": "usdot-jpo-ode", "category": "Support"}, {"name": "CV-DSRC-Message-Parser", "url": "https://github.com/OSADP/CV-DSRC-Message-Parser", "description": "The FHWA Connected Vehicle DSRC Message Processor (DMP) is a Java application that provides an easy-to-use user interface for converting PCAP formatted CV data captures into easier to work with CSV files. This enables users to utilize the data stored in BSM, SPaT, and MAP messages recorded in those PCAP files without having to deal with the minutia of processing that data.", "org": "OSADP ", "category": "Support"}, {"name": "cvrm", "url": "https://github.com/Trihydro/cvrm", "description": "The open source code base for the WYDOT CV Resource Manager, a web application that aids in documenting participants, vehicles and equipment over the course of the WYDOT CV Pilot Project.", "org": "Trihydro", "category": "Support"}, {"name": "jpo-cvdp", "url": "https://github.com/usdot-jpo-ode/jpo-cvdp", "description": "SUBMODULE: Connected Vehicle Data Privacy module for the USDOT ITS JPO data programs. Filters geolocations using geofencing and certain data fields. Also redacts fields based on definable conditions.", "org": "usdot-jpo-ode", "category": "Support"}, {"name": "jpo-ode-scms-asn", "url": "https://github.com/usdot-jpo-ode/jpo-ode-scms-asn", "description": "This repository contains the ASN.1 definitions for data containers and protocols used in SCMS.", "org": "usdot-jpo-ode", "category": "Support"}, {"name": "jpo-security", "url": "https://github.com/usdot-jpo-ode/jpo-security", "description": "SUBMODULE: 1609.2 Java Security Library for handling security functions of the SCMS. Provided by Leidos for reuse in JPO projects.", "org": "usdot-jpo-ode", "category": "Support"}, {"name": "jpo-security-svcs", "url": "https://github.com/usdot-jpo-ode/jpo-security-svcs", "description": "This module exposes a RESTful API for performing cryptographic functions.", "org": "usdot-jpo-ode", "category": "Support"}, {"name": "jpo-tim-builder", "url": "https://github.com/usdot-jpo-ode/jpo-tim-builder ", "description": "SUBMODULE: Visual GUI for building TIM messages for testing. Interacts with the ODE RESTful API", "org": "usdot-jpo-ode", "category": "Support"}, {"name": "kafka-docker", "url": "https://github.com/usdot-jpo-ode/kafka-docker", "description": "Dockerfile for Apache Kafka", "org": "usdot-jpo-ode", "category": "Support"}, {"name": "Mobile_D2X_Framework", "url": "https://github.com/OSADP/Mobile_D2X_Framework", "description": "The D2X Hub provides a platform to facilitate agencies' initiatives of data exchange between mobile devices, traffic management systems, ITS devices and vehicles. The D2X Hub is a message handler, supporting the translation of data between different industry standards used by connected vehicles, devices, or components.", "org": "OSADP", "category": "Support"}, {"name": "OpenAWAM", "url": "https://github.com/OSADP/OpenAWAM", "description": "Open Anonymous Wireless Address Matching Application: OpenAWAM is an open-source project whose purpose is to allow logging and analysis of anonymized Bluetooth addresses from multiple locations in an area of interest (generally public streets or other public places)", "org": "OSADP ", "category": "Support"}, {"name": "per-xer-codec", "url": "https://github.com/usdot-its-jpo-code/per-xer-codec", "description": "NI Wrapper for SEMI ASN.1 J2735 Extensions", "org": "usdot-its-jpo-code", "category": "Support"}, {"name": "per-xer-codec", "url": "https://github.com/usdot-jpo-ode/per-xer-codec", "description": "JNI Wrapper for SEMI ASN.1 J2735 Extensions", "org": "usdot-jpo-ode", "category": "Support"}, {"name": "PLT-Web-Map", "url": "https://github.com/VolpeUSDOT/PLT-Web-Map", "description": "Interactive map showing regional boundaries of Public Lands Team partner agencies. For Volpe PLT webpage.", "org": "VolpeUSDOT", "category": "Support"}, {"name": "privacy-protection-application", "url": "https://github.com/usdot-its-jpo-data-portal/privacy-protection-application", "description": "Privacy Protection Application (PPA): Code and instructions for building two tools for processing vehicle trip, or trajectory, data to protect driver privacy by hiding potentially sensitive locations. These tools were developed to process large databases of trips generated during connected vehicle pilot studies, but they could be used on any type of moving object data defined as time-sequences of geolocations that also includes heading and speed.", "org": "usdot-its-jpo-data-portal", "category": "Support"}, {"name": "RCVW", "url": "https://github.com/OSADP/RCVW", "description": "The Software Solution (SS) Software is designed to test different strategies for producing, transmitting, and storing Connected Vehicle information.", "org": "OSADP", "category": "Support"}, {"name": "rec-gov-analysis", "url": "https://github.com/VolpeUSDOT/rec-gov-analysis", "description": "Tools for analyzing recreation.gov historical site reservations for transportation planning", "org": "VolpeUSDOT", "category": "Support"}, {"name": "scms-asn1", "url": "https://github.com/usdot-jpo-ode/scms-asn1", "description": "This repository contains the ASN.1 definitions for data containers and protocols used in SCMS.", "org": "usdot-jpo-ode", "category": "Support"}, {"name": "smdm", "url": "https://github.com/Trihydro/smdm", "description": "The code base for the Service Monitor Device Management, a web application that monitors the network status of road side units for the WYDOT CV Pilot Project.", "org": "Trihydro", "category": "Support"}, {"name": "TCA", "url": "https://github.com/OSADP/TCA", "description": "The Trajectory Conversion Algorithm (TCA) Software is designed to test different strategies for producing, transmitting, and storing Connected Vehicle information. The TCA reads in and uses vehicle trajectory information or Vissim output, roadside equipment (RSE) location information, cellular or event region information and strategy information to produce a series of snapshots that a connected vehicle would produce. Vehicles can be equipped to generate and transmit Probe Data Messages (PDMs), Basic Safety Messages (BSMs), Cooperative Awareness Messages (CAMs) or ITS SPOT messages which can be transmitted by Dedicated Short Range Communication (DSRC) and/or via cellular. The TCA program version 2 build 3 or 2.3 includes simulated communication disruptions between vehicles and roadside equipment. As soon as a vehicle equipped to transmit via DSRC is in range of a RSE, it will download all of its snapshot information directly with a probabilistic uncertainty of the data being lost. Similarly, if the vehicle is equipped to transmit via cellular, it will download all its snapshot information directly but those snapshots might be lost or delayed due to user-defined loss rate and latency. In TCA 2.3, BSMs and PDMs can also be made to transmit at user-defined intervals.\"", "org": "OSADP ", "category": "Support"}, {"name": "Transportation-Analysis-Project-Costing-Tool", "url": "https://github.com/OSADP/Transportation-Analysis-Project-Costing-Tool", "description": "Transportation Analysis Project Costing Tool  is a spreadsheet tool that produces ballpark estimates of labor hours required for surface transportation analysis based on a small number of user inputs.", "org": "OSADP ", "category": "Support"}, {"name": "V2I-Hub", "url": "https://github.com/OSADP/V2I-Hub", "description": "Integrated V2I Prototype: V2I Hub was developed to support jurisdictions in deploying connected vehicle technology by reducing  integration issues and enabling use of their existing transportation management hardware and systems.  V2I Hub is a software platform that utilizes plugins to translate messages between different devices  and run transportation management and connected vehicle applications on roadside equipment.", "org": "OSADP ", "category": "Support"}, {"name": "validation-results-slack-lambda", "url": "https://github.com/usdot-its-jpo-data-portal/validation-results-slack-lambda", "description": "This is a Python project designed for us as an Amazon Web Services (AWS) Lambda function. It is set up to poll SQS for validation result messages, aggregate the errors into a packaged message, and send it to a Slack channel.\r\n\r\nDesigned for use in conjunction with the DataHub Canary Lambda function.", "org": "usdot-its-jpo-data-portal", "category": "Support"}, {"name": "1609dot2-asn", "url": "https://github.com/usdot-jpo-ode/1609dot2-asn", "description": "SN.1 schemas for IEEE 1609.2", "org": "usdot-jpo-ode", "category": "Support"}]}, {"category": "Sustainable Travel", "repos": [{"name": "Glidepath", "url": "https://github.com/OSADP/Glidepath", "description": "The GlidePath software is written in Java and is intended to run on an Ubuntu 14.04 system onboard the test vehicle.  It is based on the Spring framework, using Spring Boot to run all operations as a single web server, with the service bus, web pages and interface code all bundled into a single executable jar file.", "org": "OSADP", "category": "Sustainable Travel"}]}, {"category": "Traffic Management", "repos": [{"name": "AMS-Aimsun-INFLO", "url": "https://github.com/OSADP/AMS-Aimsun-INFLO", "description": "INFLO-Aimsun allows connecting the INFLO-SIM application with Aimsun for the development of AMS (Analysis Modeling and Simulation) Testbeds.", "org": "OSADP", "category": "Traffic Management"}, {"name": "ATSPM", "url": "https://github.com/OSADP/ATSPM", "description": "Automated Traffic Signal Performance Measures (ATSPM) are a series of visual aids that display the high-resolution data from signal controllers. They are a valuable asset management tool, aiding personnel in the control of both signal hardware and signal timing and coordination.  They allow analysis of data collected 24 hours a day, 7 days a week, improving the accuracy, flexibility, and performance of signal equipment and the system as a whole. ATSPM are used to optimize mobility, manage traffic signal timing and maintenance, reduce congestion, save fuel costs and improve safety.  ", "org": "OSADP ", "category": "Traffic Management"}, {"name": "Datastillery \u2013 Connected Vehicle Environment (CVE) Traffic Light Reporting", "url": "https://github.com/Datastillery/cve-traffic-light-reporting", "description": "This repo contains the notebooks and working files for the Smart Columbus Connected Vehicle Environment reporting effort", "org": "Datastillery", "category": "Traffic Management"}, {"name": "DIRECTView-AMS", "url": "https://github.com/OSADP/DIRECTView-AMS ", "description": "DIRECTView AMS consist of the source-code for a visualization module developed as part of the DIRECT simulation software package by the AMS (Analysis, Modeling and Simulation Testbeds for DMA and ATDM Evaluation) Dallas Testbed and enables users to visualize the simulation-based measures of effectiveness as a function of different simulation scenarios.", "org": "OSADP ", "category": "Traffic Management"}, {"name": "DTALite-AMS", "url": "https://github.com/OSADP/DTALite-AMS", "description": "DTALite AMS consist of the source-code and the compiled application used as part of the AMS (Analysis, Modeling and Simulation Testbeds for DMA and ATDM Evaluation) Phoenix Testbed. This Simulation Platform is used to simulate real world traffic demand within a given roadway network at a mesoscopic level. Individual vehicle agents are simulated with their trajectories tracked and recorded for performance measure analysis.", "org": "OSADP ", "category": "Traffic Management"}, {"name": "eTEXAS", "url": "https://github.com/OSADP/eTEXAS", "description": "The Enhanced Traffic EXperimental Analytical Simulation (eTEXAS) Model for Intersection Traffic is a high quality, single intersection, microscopic traffic simulation model which has been updated by Harmonia to act as a simulation library for Connected Vehicle Program applications and to incorporate certain SAE J2735 vehicle messages. The underlying TEXAS Model, developed at The University of Texas at Austin, analyzes in sub-microscopic detail the behavior of driver-vehicle units as they go through an intersection and intermix with other traffic flows. The model contains detailed intersection geometry, path following, microscopic car following, lane changing, visibility restriction features, and surrogate measures of safety allowing it to be used for intersection collision analysis.", "org": "OSADP", "category": "Traffic Management"}, {"name": "ETFOMM", "url": "https://github.com/OSADP/ETFOMM", "description": "Welcome to Enhanced Transportation Flow Open-source Microscopic Model (ETFOMM) project.   ETFOMM inherits 40 years of FHWA development of traffic simulation algorithms and flow theories while overcoming CORSIM's limitations in supporting research. This project also includes ETFOMM Application Programming Interface (ETAPI) that provides communications between ETFOMM core simulation engine and user-developed applications (Apps) through ETRunner, a Windows console program.", "org": "OSADP", "category": "Traffic Management"}, {"name": "INFLO-AMS", "url": "https://github.com/OSADP/INFLO-AMS", "description": "NFLO AMS consists of the source-code for the INFLO application used in the AMS Project (Analysis Modeling and Simulation Testbeds for DMA and ATDM Evaluation). INFLO stands for the Dynamic Mobility Application titled Intelligent Network Flow Optimization.", "org": "OSADP", "category": "Traffic Management"}, {"name": "mmitss-az", "url": "https://github.com/mmitss/mmitss-az", "description": "The Multi-Modal Intelligent Traffic Signal System (MMITSS) project is part of the Connected Vehicle Pooled Fund Study (CV PFS) entitled \"Program to Support the Development and Deployment of Connected Vehicle System Applications.\"", "org": "mmitss", "category": "Traffic Management"}, {"name": "MMITSS_AZ_FIELD", "url": "https://github.com/OSADP/MMITSS_AZ_FIELD", "description": "There are four major component of MMITSS field version: Intelligent Signal Control (I-SIG), Signal Priority (SP),  Mobile Accessible Pedestrian Signal System (PED-SIG) and real-time performance observer (PERF-OBS).", "org": "OSADP ", "category": "Traffic Management"}, {"name": "MMITSS_CA_FIELD", "url": "https://github.com/OSADP/MMITSS_CA_FIELD", "description": "MMITSS_CA_FIELD - Multi-Modal Intelligent Traffic Signal System (MMITSS) is the next generation of traffic signal systems that seeks to provide a comprehensive traffic information framework to service all modes of transportation, including general vehicles, transit, emergency vehicles, freight fleets, and pedestrians and bicyclists in a connected vehicle (CV) environment.\"", "org": "OSADP ", "category": "Traffic Management"}, {"name": "MMITSS_THEA", "url": "https://github.com/OSADP/MMITSS_THEA", "description": "MMITSS-Tampa Model program is a port of MMITSS-AZ 1.0 to the Tampa SC Pilot Siemens RSU", "org": "OSADP ", "category": "Traffic Management"}, {"name": "SPaT", "url": "https://github.com/OSADP/SPaT", "description": "Signal Phase and Timing: his software supports generation of several over-the-air message to include SPAT, MAP, RTCM and SSM.  SPaT is generated based on a NTCIP block object 'pushed' from a SPaT-enabled Traffic Signal Controller.", "org": "OSADP", "category": "Traffic Management"}, {"name": "Speed-Harmonization", "url": "https://github.com/OSADP/Speed-Harmonization ", "description": "The Speed Harm software is composed of three components: 1. the control software (version 1.1) is written in Simulink and runs on the vehicle's MicroAutobox II (MAB), 2. the DVI software (version 1.0) is written in Java and runs on the vehicle's secondary computer, which is an Ubuntu Linux PC, 3. the server software (version 1.0.1) is written in Java and runs on an independent server intended to simulate a TMC facility.", "org": "OSADP", "category": "Traffic Management"}, {"name": "STOL_Crossing", "url": "https://github.com/OSADP/STOL_Crossing", "description": "The Pedestrian Mid-block Crossing Application is designed to allow pedestrians at configured mid-block cross walks communicate their intent to cross with drivers approaching the same mid-block cross walk.", "org": "OSADP", "category": "Traffic Management"}, {"name": "TO-22-Speed-Harmonization", "url": "https://github.com/STOL-AMS/TO-22-Speed-Harmonization", "description": "Speed harmonization, as a traffic control strategy, adjusts the speed limit of a freeway section based on prevailing traffic conditions. Shockwave detection, speed limit selection, and speed limit broadcasting to upstream vehicles constitute the major components of the speed harmonization strategy.", "org": "STOL-AMS", "category": "Traffic Management"}, {"name": "Traffic-Congestion-State-Predictor-Tool", "url": "https://github.com/OSADP/Traffic-Congestion-State-Predictor-Tool", "description": "The Connected Vehicle Big Data Analytics Tool code is designed to predict traffic congestion in an 100 ft x 100 ft area every minute an hour ahead of time using Basic Safety Messages (BSM) or average speed data from INRIX.", "org": "OSADP ", "category": "Traffic Management"}]}, {"category": "Traveler Information ", "repos": [{"name": "D-RIDE-AMS", "url": "https://github.com/OSADP/D-RIDE-AMS", "description": "Dynamic Ridesharing: D-RIDE AMS consist of the source-code and the compiled application used as part of the AMS (Analysis, Modeling and Simulation Testbeds for DMA and ATDM Evaluation) Phoenix Testbed.", "org": "OSADP", "category": "Traveler Information "}, {"name": "FHWA-Relative-Mode-Share-Impacts-under-Different-Shared-Rides-Scenarios", "url": "https://github.com/scottrmiddleton/FHWA-Relative-Mode-Share-Impacts-under-Different-Shared-Rides-Scenarios", "description": "This repository contains analytical code developed for the FHWA sponsored project on Analysis of Travel Choices and Scenarios for Sharing Rides.", "org": "scottrmiddleton", "category": "Traveler Information "}, {"name": "UMinn-SmarTrAC", "url": "https://github.com/OSADP/UMinn-SmarTrAC ", "description": "SmartTrAC is a smart phone application that collects highly-detailed activity and travel behavior data with minimal user burden, providing a compelling alternative to the traditional diary-based method typically used to collect individual travel and activity information. ", "org": "OSADP", "category": "Traveler Information "}]}, {"category": "Vehicle Safety", "repos": [{"name": "AMS-CACC-Aimsun", "url": "https://github.com/OSADP/AMS-CACC-Aimsun", "description": "CACC for Aimsun is designed to simulate close-spaced CACC platoons in Aimsun via a custom behavioral model developed with microSDK. This application can be used to evaluate the operational benefits of Cooperative Adaptive Cruise Control on freeways.", "org": "OSADP ", "category": "Vehicle Safety"}, {"name": "avt_vimba_camera", "url": "https://github.com/usdot-fhwa-stol/avt_vimba_camera", "description": "ROS Driver for AVT cameras using VIMBA SDK", "org": "usdot-fhwa-stol", "category": "Vehicle Safety"}, {"name": "CACC", "url": "https://github.com/OSADP/CACC", "description": "CACC VISSIM 2.0 Algorithm is designed to simulate close-spaced CACC platoons in VISSIM using the COM interface and VISSIM API. This application can be used to evaluate the operational benefits of having a dedicated CACC lane on freeway. Need Visual Studio 2013 and VISSIM version 6.22 or newer (both 32 and 64 bit versions work) to run the algorithm.", "org": "OSADP", "category": "Vehicle Safety"}, {"name": "carma-base", "url": "https://github.com/usdot-fhwa-stol/carma-base", "description": "Docker base image for the CARMA Platform, bakes in all necessary system dependencies to minimize final image size", "org": "usdot-fhwa-stol", "category": "Vehicle Safety"}, {"name": "carma-cadillac-srx-2013-controller-driver", "url": "https://github.com/usdot-fhwa-stol/carma-cadillac-srx-2013-controller-driver", "description": "CARMA platform driver for use with TORC's Cadillac SRX 2013 controller system", "org": "usdot-fhwa-stol", "category": "Vehicle Safety"}, {"name": "carma-cloud", "url": "https://github.com/usdot-fhwa-stol/carma-cloud", "description": "Now available! Cloud-based open source software (OSS) that enables infrastructure cooperation with automated driving technology through Transportation Systems Management and Operations (TSMO).", "org": "usdot-fhwa-stol", "category": "Vehicle Safety"}, {"name": "carma-cohda-dsrc-driver", "url": "https://github.com/usdot-fhwa-stol/carma-cohda-dsrc-driver", "description": "Cohda DSRC driver for CARMA Platform", "org": "usdot-fhwa-stol", "category": "Vehicle Safety"}, {"name": "carma-config", "url": "https://github.com/usdot-fhwa-stol/carma-config", "description": "System configuration data for CARMA vehicle/vehicle-class deployments", "org": "usdot-fhwa-stol", "category": "Vehicle Safety"}, {"name": "carma-delphi-esr-driver", "url": "https://github.com/usdot-fhwa-stol/carma-delphi-esr-driver", "description": "Delphi ESR driver for CARMA Platform", "org": "usdot-fhwa-stol", "category": "Vehicle Safety"}, {"name": "carma-delphi-srr2-driver", "url": "https://github.com/usdot-fhwa-stol/carma-delphi-srr2-driver", "description": "Driver wrapper for Delphi SRR2 radar system for usage with the CARMA Platform", "org": "usdot-fhwa-stol", "category": "Vehicle Safety"}, {"name": "carma-freightliner-2012-controller-driver", "url": "https://github.com/usdot-fhwa-stol/carma-freightliner-2012-controller-driver", "description": "Truck controller driver for usage with the CARMA Platform", "org": "usdot-fhwa-stol", "category": "Vehicle Safety"}, {"name": "carma-msgs", "url": "https://github.com/usdot-fhwa-stol/carma-msgs", "description": "ROS Message definitions used by the CARMA Platform", "org": "usdot-fhwa-stol", "category": "Vehicle Safety"}, {"name": "carma-platform", "url": "https://github.com/usdot-fhwa-stol/carma-platform", "description": "CARMA Platform is built on robot operating system (ROS) and utilizes open source software (OSS) that enables Cooperative Driving Automation (CDA) features to allow Automated Driving Systems to interact and cooperate with infrastructure and other vehicles through communication.", "org": "usdot-fhwa-stol", "category": "Vehicle Safety"}, {"name": "carma-ssc-interface-wrapper", "url": "https://github.com/usdot-fhwa-stol/carma-ssc-interface-wrapper", "description": "Autoware Speed and Steering Control node wrapper for usage with the CARMA Platform", "org": "usdot-fhwa-stol", "category": "Vehicle Safety"}, {"name": "carma-torc-pinpoint-driver", "url": "https://github.com/usdot-fhwa-stol/carma-torc-pinpoint-driver", "description": "TORC Pinpoint localization system driver for CARMA Platform", "org": "usdot-fhwa-stol", "category": "Vehicle Safety"}, {"name": "carma-torc-xgv-controller-driver", "url": "https://github.com/usdot-fhwa-stol/carma-torc-xgv-controller-driver", "description": "TORC XGV Controller system driver for CARMA Platform", "org": "usdot-fhwa-stol", "category": "Vehicle Safety"}, {"name": "carma-utils", "url": "https://github.com/usdot-fhwa-stol/carma-utils", "description": "Utility libraries for hardware drivers in the CARMA Platform", "org": "usdot-fhwa-stol", "category": "Vehicle Safety"}, {"name": "carma-vehicle-model-framework", "url": "https://github.com/usdot-fhwa-stol/carma-vehicle-model-framework", "description": "Framework for computing predicted vehicle state given various forms of control inputs. Allows for vehicle-agnostic planning code to access vehicle-specific kinematics calculations.", "org": "usdot-fhwa-stol", "category": "Vehicle Safety"}, {"name": "carma-velodyne-lidar-driver", "url": "https://github.com/usdot-fhwa-stol/carma-velodyne-lidar-driver", "description": "Velodyne LiDAR Driver wrapper for usage with the CARMA Platform", "org": "usdot-fhwa-stol", "category": "Vehicle Safety"}, {"name": "carma-web-ui", "url": "https://github.com/usdot-fhwa-stol/carma-web-ui", "description": "Web User Interface for CARMA Platform", "org": "usdot-fhwa-stol", "category": "Vehicle Safety"}, {"name": "Lane-Change", "url": "https://github.com/OSADP/Lane-Change", "description": "This lane change software sets on top of the reusable platform software in the TFHRC's CARMA fleet of Cadillac SRXs. It provides algorithmic control for the connected vehicles performing a lane merge maneuver using DSRC v2v communications.", "org": "OSADP", "category": "Vehicle Safety"}, {"name": "novatel_gps_driver", "url": "https://github.com/usdot-fhwa-stol/novatel_gps_driver", "description": "ROS driver for NovAtel GPS / GNSS receivers", "org": "usdot-fhwa-stol", "category": "Vehicle Safety"}, {"name": "SNVA", "url": "https://github.com/VolpeUSDOT/SNVA", "description": "SHRP2 NDS Video Analytics built on TensorFlow", "org": "VolpeUSDOT", "category": "Vehicle Safety"}, {"name": "TO-22-Improved-CACC", "url": "https://github.com/STOL-AMS/TO-22-Improved-CACC", "description": "This project developed an improved cooperative adaptive cruise control (CACC) model, in which connected manually-driven vehicle (CMDV) drivers respond to infrastructure-to-vehicle (I2V)-based variable speed advisories (VSA) in mixed traffic.", "org": "STOL-AMS", "category": "Vehicle Safety"}, {"name": "TO-22-Lane-Changing", "url": "https://github.com/STOL-AMS/TO-22-Lane-Changing", "description": "This project developed a light-duty CAV lane-changing (LC) model with four components: car following (CF), mandatory and incentive-based LC decision-making, LC path generation and following, and LC abort path generation and following.", "org": "STOL-AMS", "category": "Vehicle Safety"}, {"name": "TO-22-Merge-Coordination", "url": "https://github.com/STOL-AMS/TO-22-Merge-Coordination", "description": "Merge coordination aims to minimize the negative impacts of the merging process on the target lane. The shockwave magnitude and duration resulted from a merging maneuver depends on the lane-changing trajectory, traffic conditions in the origin and target lanes, and the response of the vehicles in the target lane to lane-changing vehicle.", "org": "STOL-AMS", "category": "Vehicle Safety"}, {"name": "VEDM-CAV", "url": "https://github.com/OSADP/VEDM-CAV", "description": "VEDM-CAV 1.0 is an innovative framework for simulating machine driving in a traffic simulator, VISSIM. This expands on the existing simulation work which is largely based on human driver models.", "org": "OSADP ", "category": "Vehicle Safety"}]}, {"category": "Weather", "repos": [{"name": "IMCRP", "url": "https://github.com/OSADP/IMRCP", "description": "The Integrated Modeling for Road Condition Prediction (IMRCP) System version 1.0 integrates weather and traffic data sources and predictive methods to effectively predict road and travel conditions in support of tactical and strategic decisions by travelers, transportation operators, and maintenance providers. ", "org": "OSADP ", "category": "Weather"}, {"name": "Pikalert-Vehicle-Data-Translator-", "url": "https://github.com/OSADP/Pikalert-Vehicle-Data-Translator-", "description": "The EMDSS represents the latest innovation in snow control. Building on years of MDSS development, the EMDSS incorporates Connected Vehicle data into the forecast and decision process. As a result, end users can obtain information along the entire stretch of roadway, and not just at Road Weather Information System (RWIS) sites. This enables maintenance providers to better monitor and react to changing road conditions. ", "org": "OSADP ", "category": "Weather"}, {"name": "Road-Weather-Performance-Management-", "url": "https://github.com/OSADP/Road-Weather-Performance-Management-", "description": "The tool captures and analyzes applicable traffic mobility and road weather data continuously from multiple sources. This includes capturing road weather data from fixed weather  stations", "org": "OSADP ", "category": "Weather"}, {"name": "WxDE", "url": "https://github.com/usdot-fhwa-stol/WxDE", "description": "Weather data environment for the FHWA Saxton Lab", "org": "usdot-fhwa-stol", "category": "Weather"}]}, {"category": "Other", "repos": [{"name": "PortalRepo", "url": "https://github.com/OSADP/PortalRepo", "description": "Archived code for the Open Source Application Development Portal (OSADP), a web-based portal that provided access to and supported the collaboration, development, and use of open-source intelligent transportation systems (ITS)-related applications.", "org": "OSADP ", "category": "Other"}]}]